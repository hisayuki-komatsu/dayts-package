# name: Node.js Package

# on:
#   pull_request:
#     branches:
#       - main
#     types: [closed]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     permissions:
#       packages: write
#       contents: read
#     steps:
#       - uses: actions/checkout@v3
#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18
#           registry-url: https://npm.pkg.github.com/

#       - name: Package install
#         run: npm install

#       - name: Build Package
#         run: npm run build

#       - name: Publish package
#         run: npm publish
#         env:
#           NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Node.js Package

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out codes
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Set releaser settings
        run: |
          git config --global user.name release-machine
          git config --global user.email email@example.com
      - name: Major release
        id: major
        if: contains(toJSON(github.event.commits.*.message), 'bump up version major')
        run: npx release-it@${RELEASE_IT_VERSION} -- major --ci
      - name: Minor release
        id: minor
        # メジャーバージョンアップをしていないときマイナーバージョンアップを行なうか
        if: steps.major.conclusion == 'skipped'  && contains(toJSON(github.event.commits.*.message), 'bump up version minor')
        run: npx release-it@${RELEASE_IT_VERSION} -- minor --ci
      - name: Patch release
        # コミットメッセージに特に指定がない場合はマイナーバージョンを更新する
        if: "!(steps.major.conclusion == 'success' || steps.minor.conclusion == 'success')"
        run: npx release-it@${RELEASE_IT_VERSION} -- patch --ci
